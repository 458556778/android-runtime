// command:
//			gradle -b jarProject.gradle jarReleaseClasses copyJaredProject

apply plugin: "com.android.application"

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
    }
}

repositories {
    jcenter()
}

def computeCompileSdkVersion () {
	if(project.hasProperty("compileSdk")) {
		return compileSdk
	}
	return 22
}

def computeBuildToolsVersion() {
	if(project.hasProperty("buildToolsVersion")) {
		return buildToolsVersion
	}
	return "22.0.1"
}

def computeMinSdkVersion() {
	if(project.hasProperty("minSdk")) {
		return minSdk
	}
	return 17
}

def computeTargetSdkVersion() {
	if(project.hasProperty("targetSdk")) {
		return targetSdk
	}
	return 22
}

def computeSupportVersion() { 
	if(project.hasProperty("supportVersion")) {
		return supportVersion
	}
	return "22.2.0"
}


android {

	compileSdkVersion computeCompileSdkVersion()
    buildToolsVersion computeBuildToolsVersion()
	
	defaultConfig {
		minSdkVersion computeMinSdkVersion()
		targetSdkVersion computeTargetSdkVersion()
	}
	
	sourceSets.main {
		//manifest is necessary to generate a BuildConfig.java file necessary for build
		manifest.srcFile "./AndroidManifest.xml"
		res.srcDir "res"
		java.srcDir "src"
	}
}

dependencies {
	def nativescriptJar = "../dist/framework/libs/nativescript.jar"
	def suppotVer = computeSupportVersion();
    
	compile "com.android.support:support-v4:$suppotVer"
	compile files(nativescriptJar)
    // compile "com.android.support:appcompat-v7:suppotVer"
}

task copyJaredProject (type:Copy) {
	from "$rootDir/build/intermediates/packaged/release"
	into "$rootDir/metadata/libs"
	rename "classes.jar", "testapp.jar"
}